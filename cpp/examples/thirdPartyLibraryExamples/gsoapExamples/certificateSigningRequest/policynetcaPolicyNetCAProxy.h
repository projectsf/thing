/* policynetcaPolicyNetCAProxy.h
   Generated by gSOAP 2.7.9i from csr.hpp
   Copyright(C) 2000-2007, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef policynetcaPolicyNetCAProxy_H
#define policynetcaPolicyNetCAProxy_H
#include "policynetcaH.h"

namespace policynetca {

class SOAP_CMAC PolicyNetCAProxy : public soap
{ public:
		/// endpoint URL (set to override)
		const char *soap_endpoint;
		PolicyNetCAProxy();
		PolicyNetCAProxy(soap_mode iomode);
		PolicyNetCAProxy(soap_mode imode, soap_mode omode);
	virtual	~PolicyNetCAProxy();
	virtual	void PolicyNetCAProxy_init(soap_mode imode, soap_mode omode);
	/// Disable/remove SOAP Header from message
	virtual	void soap_noheader();
	/// Put SOAP Header in message
	virtual	void soap_header(char *policynet__LoginUsername, char *policynet__SessionId);
	/// Get SOAP Header structure (NULL when absent)
	virtual	const SOAP_ENV__Header *soap_header();
	/// Get SOAP Fault structure (NULL when absent)
	virtual	const SOAP_ENV__Fault *soap_fault();
	/// Get SOAP Fault string (NULL when absent)
	virtual	const char *soap_fault_string();
	/// Get SOAP Fault detail as string (NULL when absent)
	virtual	const char *soap_fault_detail();
	/// Web service method 'CertificateSigningRequest':
	virtual	int CertificateSigningRequest(policynet__CertificateSigning Request, policynet__CertificateSigningResponse &Response);
	/// Web service method 'CertificateConfirmRequest':
	virtual	int CertificateConfirmRequest(policynet__CertificateConfirm Confirm, policynet__CertificateConfirmResponse &Response);
	/// Web service method 'CertificateRevocationRequest':
	virtual	int CertificateRevocationRequest(std::string SenderCertificate, policynet__CertificateRevocation CertRev, policynet__CertificateRevocationResponse &Response);
	/// Web service method 'CertificateRevocationListRequest':
	virtual	int CertificateRevocationListRequest(void *_param_1, policynet__CertificateRevocationListResponse &Response);
};

} // namespace policynetca

#endif
