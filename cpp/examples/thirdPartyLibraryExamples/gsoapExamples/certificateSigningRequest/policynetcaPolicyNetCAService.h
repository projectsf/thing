/* policynetcaPolicyNetCAService.h
   Generated by gSOAP 2.7.9i from csr.hpp
   Copyright(C) 2000-2007, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef policynetcaPolicyNetCAService_H
#define policynetcaPolicyNetCAService_H
#include "policynetcaH.h"

namespace policynetca {
class SOAP_CMAC PolicyNetCAService : public soap
{ public:
		PolicyNetCAService();
		PolicyNetCAService(soap_mode iomode);
		PolicyNetCAService(soap_mode imode, soap_mode omode);
	virtual ~PolicyNetCAService();
	virtual	void PolicyNetCAService_init(soap_mode imode, soap_mode omode);
	virtual	PolicyNetCAService *copy();
	virtual	int bind(const char *host, int port, int backlog);
	virtual	int accept();
	virtual	int serve();
	virtual	int dispatch();
	// Service operations (you should define these):
	/// Web service method 'CertificateSigningRequest':
	virtual	int CertificateSigningRequest(policynet__CertificateSigning Request, policynet__CertificateSigningResponse &Response);
	/// Web service method 'CertificateConfirmRequest':
	virtual	int CertificateConfirmRequest(policynet__CertificateConfirm Confirm, policynet__CertificateConfirmResponse &Response);
	/// Web service method 'CertificateRevocationRequest':
	virtual	int CertificateRevocationRequest(std::string SenderCertificate, policynet__CertificateRevocation CertRev, policynet__CertificateRevocationResponse &Response);
	/// Web service method 'CertificateRevocationListRequest':
	virtual	int CertificateRevocationListRequest(void *_param_1, policynet__CertificateRevocationListResponse &Response);
};

} // namespace policynetca

#endif
