/* policynetcaH.h
   Generated by gSOAP 2.7.9i from csr.hpp
   Copyright(C) 2000-2007, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef policynetcaH_H
#define policynetcaH_H
#include "policynetcaStub.h"

namespace policynetca {
#ifndef WITH_NOIDREF
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

SOAP_FMAC3 void* SOAP_FMAC4 soap_container_id_forward(struct soap*, const char*, void*, size_t, int, int, size_t, unsigned int);

SOAP_FMAC3 void SOAP_FMAC4 soap_container_insert(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_policynetca_byte
#define SOAP_TYPE_policynetca_byte (2)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

#ifndef SOAP_TYPE_policynetca_int
#define SOAP_TYPE_policynetca_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

#ifndef SOAP_TYPE_policynetca_unsignedByte
#define SOAP_TYPE_policynetca_unsignedByte (8)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedByte(struct soap*, unsigned char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedByte(struct soap*, const unsigned char *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedByte(struct soap*, const char*, int, const unsigned char *, const char*);
SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_get_unsignedByte(struct soap*, unsigned char *, const char*, const char*);
SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_in_unsignedByte(struct soap*, const char*, unsigned char *, const char*);

#ifndef SOAP_TYPE_policynetca_xsd__positiveInteger
#define SOAP_TYPE_policynetca_xsd__positiveInteger (12)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xsd__positiveInteger(struct soap*, unsigned int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__positiveInteger(struct soap*, const unsigned int *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__positiveInteger(struct soap*, const char*, int, const unsigned int *, const char*);
SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_get_xsd__positiveInteger(struct soap*, unsigned int *, const char*, const char*);
SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_in_xsd__positiveInteger(struct soap*, const char*, unsigned int *, const char*);

#ifndef SOAP_TYPE_policynetca_unsignedInt
#define SOAP_TYPE_policynetca_unsignedInt (7)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedInt(struct soap*, unsigned int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedInt(struct soap*, const unsigned int *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedInt(struct soap*, const char*, int, const unsigned int *, const char*);
SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_get_unsignedInt(struct soap*, unsigned int *, const char*, const char*);
SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_in_unsignedInt(struct soap*, const char*, unsigned int *, const char*);

#ifndef SOAP_TYPE_policynetca_policynet__CRLReason
#define SOAP_TYPE_policynetca_policynet__CRLReason (47)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_policynet__CRLReason(struct soap*, enum policynet__CRLReason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_policynet__CRLReason(struct soap*, const enum policynet__CRLReason *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_policynet__CRLReason(struct soap*, const char*, int, const enum policynet__CRLReason *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_policynet__CRLReason2s(struct soap*, enum policynet__CRLReason);
SOAP_FMAC3 enum policynet__CRLReason * SOAP_FMAC4 soap_get_policynet__CRLReason(struct soap*, enum policynet__CRLReason *, const char*, const char*);
SOAP_FMAC3 enum policynet__CRLReason * SOAP_FMAC4 soap_in_policynet__CRLReason(struct soap*, const char*, enum policynet__CRLReason *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2policynet__CRLReason(struct soap*, const char*, enum policynet__CRLReason *);

#ifndef SOAP_TYPE_policynetca_policynet__PNService
#define SOAP_TYPE_policynetca_policynet__PNService (27)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_policynet__PNService(struct soap*, enum policynet__PNService *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_policynet__PNService(struct soap*, const enum policynet__PNService *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_policynet__PNService(struct soap*, const char*, int, const enum policynet__PNService *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_policynet__PNService2s(struct soap*, enum policynet__PNService);
SOAP_FMAC3 enum policynet__PNService * SOAP_FMAC4 soap_get_policynet__PNService(struct soap*, enum policynet__PNService *, const char*, const char*);
SOAP_FMAC3 enum policynet__PNService * SOAP_FMAC4 soap_in_policynet__PNService(struct soap*, const char*, enum policynet__PNService *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2policynet__PNService(struct soap*, const char*, enum policynet__PNService *);

#ifndef SOAP_TYPE_policynetca_policynet__PKIFailureInfo
#define SOAP_TYPE_policynetca_policynet__PKIFailureInfo (22)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_policynet__PKIFailureInfo(struct soap*, enum policynet__PKIFailureInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_policynet__PKIFailureInfo(struct soap*, const enum policynet__PKIFailureInfo *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_policynet__PKIFailureInfo(struct soap*, const char*, int, const enum policynet__PKIFailureInfo *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_policynet__PKIFailureInfo2s(struct soap*, enum policynet__PKIFailureInfo);
SOAP_FMAC3 enum policynet__PKIFailureInfo * SOAP_FMAC4 soap_get_policynet__PKIFailureInfo(struct soap*, enum policynet__PKIFailureInfo *, const char*, const char*);
SOAP_FMAC3 enum policynet__PKIFailureInfo * SOAP_FMAC4 soap_in_policynet__PKIFailureInfo(struct soap*, const char*, enum policynet__PKIFailureInfo *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2policynet__PKIFailureInfo(struct soap*, const char*, enum policynet__PKIFailureInfo *);

#ifndef SOAP_TYPE_policynetca_policynet__PKIStatus
#define SOAP_TYPE_policynetca_policynet__PKIStatus (21)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_policynet__PKIStatus(struct soap*, enum policynet__PKIStatus *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_policynet__PKIStatus(struct soap*, const enum policynet__PKIStatus *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_policynet__PKIStatus(struct soap*, const char*, int, const enum policynet__PKIStatus *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_policynet__PKIStatus2s(struct soap*, enum policynet__PKIStatus);
SOAP_FMAC3 enum policynet__PKIStatus * SOAP_FMAC4 soap_get_policynet__PKIStatus(struct soap*, enum policynet__PKIStatus *, const char*, const char*);
SOAP_FMAC3 enum policynet__PKIStatus * SOAP_FMAC4 soap_in_policynet__PKIStatus(struct soap*, const char*, enum policynet__PKIStatus *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2policynet__PKIStatus(struct soap*, const char*, enum policynet__PKIStatus *);

#ifndef SOAP_TYPE_policynetca_policynet__CertificateRevocationListResponse
#define SOAP_TYPE_policynetca_policynet__CertificateRevocationListResponse (53)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_policynet__CertificateRevocationListResponse(struct soap*, const char*, int, const policynet__CertificateRevocationListResponse *, const char*);
SOAP_FMAC3 policynet__CertificateRevocationListResponse * SOAP_FMAC4 soap_get_policynet__CertificateRevocationListResponse(struct soap*, policynet__CertificateRevocationListResponse *, const char*, const char*);
SOAP_FMAC3 policynet__CertificateRevocationListResponse * SOAP_FMAC4 soap_in_policynet__CertificateRevocationListResponse(struct soap*, const char*, policynet__CertificateRevocationListResponse *, const char*);
SOAP_FMAC5 policynet__CertificateRevocationListResponse * SOAP_FMAC6 soap_new_policynet__CertificateRevocationListResponse(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_policynet__CertificateRevocationListResponse(struct soap*, policynet__CertificateRevocationListResponse*);
SOAP_FMAC3 policynet__CertificateRevocationListResponse * SOAP_FMAC4 soap_instantiate_policynet__CertificateRevocationListResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_policynet__CertificateRevocationListResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_policynetca_policynet__CertificateRevocationResponse
#define SOAP_TYPE_policynetca_policynet__CertificateRevocationResponse (49)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_policynet__CertificateRevocationResponse(struct soap*, const char*, int, const policynet__CertificateRevocationResponse *, const char*);
SOAP_FMAC3 policynet__CertificateRevocationResponse * SOAP_FMAC4 soap_get_policynet__CertificateRevocationResponse(struct soap*, policynet__CertificateRevocationResponse *, const char*, const char*);
SOAP_FMAC3 policynet__CertificateRevocationResponse * SOAP_FMAC4 soap_in_policynet__CertificateRevocationResponse(struct soap*, const char*, policynet__CertificateRevocationResponse *, const char*);
SOAP_FMAC5 policynet__CertificateRevocationResponse * SOAP_FMAC6 soap_new_policynet__CertificateRevocationResponse(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_policynet__CertificateRevocationResponse(struct soap*, policynet__CertificateRevocationResponse*);
SOAP_FMAC3 policynet__CertificateRevocationResponse * SOAP_FMAC4 soap_instantiate_policynet__CertificateRevocationResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_policynet__CertificateRevocationResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_policynetca_policynet__CertificateRevocation
#define SOAP_TYPE_policynetca_policynet__CertificateRevocation (48)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_policynet__CertificateRevocation(struct soap*, const char*, int, const policynet__CertificateRevocation *, const char*);
SOAP_FMAC3 policynet__CertificateRevocation * SOAP_FMAC4 soap_get_policynet__CertificateRevocation(struct soap*, policynet__CertificateRevocation *, const char*, const char*);
SOAP_FMAC3 policynet__CertificateRevocation * SOAP_FMAC4 soap_in_policynet__CertificateRevocation(struct soap*, const char*, policynet__CertificateRevocation *, const char*);
SOAP_FMAC5 policynet__CertificateRevocation * SOAP_FMAC6 soap_new_policynet__CertificateRevocation(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_policynet__CertificateRevocation(struct soap*, policynet__CertificateRevocation*);
SOAP_FMAC3 policynet__CertificateRevocation * SOAP_FMAC4 soap_instantiate_policynet__CertificateRevocation(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_policynet__CertificateRevocation(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_policynetca_policynet__CertificateConfirmResponse
#define SOAP_TYPE_policynetca_policynet__CertificateConfirmResponse (43)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_policynet__CertificateConfirmResponse(struct soap*, const char*, int, const policynet__CertificateConfirmResponse *, const char*);
SOAP_FMAC3 policynet__CertificateConfirmResponse * SOAP_FMAC4 soap_get_policynet__CertificateConfirmResponse(struct soap*, policynet__CertificateConfirmResponse *, const char*, const char*);
SOAP_FMAC3 policynet__CertificateConfirmResponse * SOAP_FMAC4 soap_in_policynet__CertificateConfirmResponse(struct soap*, const char*, policynet__CertificateConfirmResponse *, const char*);
SOAP_FMAC5 policynet__CertificateConfirmResponse * SOAP_FMAC6 soap_new_policynet__CertificateConfirmResponse(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_policynet__CertificateConfirmResponse(struct soap*, policynet__CertificateConfirmResponse*);
SOAP_FMAC3 policynet__CertificateConfirmResponse * SOAP_FMAC4 soap_instantiate_policynet__CertificateConfirmResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_policynet__CertificateConfirmResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_policynetca_policynet__CertificateConfirm
#define SOAP_TYPE_policynetca_policynet__CertificateConfirm (42)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_policynet__CertificateConfirm(struct soap*, const char*, int, const policynet__CertificateConfirm *, const char*);
SOAP_FMAC3 policynet__CertificateConfirm * SOAP_FMAC4 soap_get_policynet__CertificateConfirm(struct soap*, policynet__CertificateConfirm *, const char*, const char*);
SOAP_FMAC3 policynet__CertificateConfirm * SOAP_FMAC4 soap_in_policynet__CertificateConfirm(struct soap*, const char*, policynet__CertificateConfirm *, const char*);
SOAP_FMAC5 policynet__CertificateConfirm * SOAP_FMAC6 soap_new_policynet__CertificateConfirm(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_policynet__CertificateConfirm(struct soap*, policynet__CertificateConfirm*);
SOAP_FMAC3 policynet__CertificateConfirm * SOAP_FMAC4 soap_instantiate_policynet__CertificateConfirm(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_policynet__CertificateConfirm(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_policynetca_policynet__CertificateSigningResponse
#define SOAP_TYPE_policynetca_policynet__CertificateSigningResponse (36)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_policynet__CertificateSigningResponse(struct soap*, const char*, int, const policynet__CertificateSigningResponse *, const char*);
SOAP_FMAC3 policynet__CertificateSigningResponse * SOAP_FMAC4 soap_get_policynet__CertificateSigningResponse(struct soap*, policynet__CertificateSigningResponse *, const char*, const char*);
SOAP_FMAC3 policynet__CertificateSigningResponse * SOAP_FMAC4 soap_in_policynet__CertificateSigningResponse(struct soap*, const char*, policynet__CertificateSigningResponse *, const char*);
SOAP_FMAC5 policynet__CertificateSigningResponse * SOAP_FMAC6 soap_new_policynet__CertificateSigningResponse(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_policynet__CertificateSigningResponse(struct soap*, policynet__CertificateSigningResponse*);
SOAP_FMAC3 policynet__CertificateSigningResponse * SOAP_FMAC4 soap_instantiate_policynet__CertificateSigningResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_policynet__CertificateSigningResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_policynetca_policynet__CertificateSigning
#define SOAP_TYPE_policynetca_policynet__CertificateSigning (35)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_policynet__CertificateSigning(struct soap*, const char*, int, const policynet__CertificateSigning *, const char*);
SOAP_FMAC3 policynet__CertificateSigning * SOAP_FMAC4 soap_get_policynet__CertificateSigning(struct soap*, policynet__CertificateSigning *, const char*, const char*);
SOAP_FMAC3 policynet__CertificateSigning * SOAP_FMAC4 soap_in_policynet__CertificateSigning(struct soap*, const char*, policynet__CertificateSigning *, const char*);
SOAP_FMAC5 policynet__CertificateSigning * SOAP_FMAC6 soap_new_policynet__CertificateSigning(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_policynet__CertificateSigning(struct soap*, policynet__CertificateSigning*);
SOAP_FMAC3 policynet__CertificateSigning * SOAP_FMAC4 soap_instantiate_policynet__CertificateSigning(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_policynet__CertificateSigning(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_policynetca_policynet__PKCSDigitalEvenlope
#define SOAP_TYPE_policynetca_policynet__PKCSDigitalEvenlope (33)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_policynet__PKCSDigitalEvenlope(struct soap*, const char*, int, const policynet__PKCSDigitalEvenlope *, const char*);
SOAP_FMAC3 policynet__PKCSDigitalEvenlope * SOAP_FMAC4 soap_get_policynet__PKCSDigitalEvenlope(struct soap*, policynet__PKCSDigitalEvenlope *, const char*, const char*);
SOAP_FMAC3 policynet__PKCSDigitalEvenlope * SOAP_FMAC4 soap_in_policynet__PKCSDigitalEvenlope(struct soap*, const char*, policynet__PKCSDigitalEvenlope *, const char*);
SOAP_FMAC5 policynet__PKCSDigitalEvenlope * SOAP_FMAC6 soap_new_policynet__PKCSDigitalEvenlope(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_policynet__PKCSDigitalEvenlope(struct soap*, policynet__PKCSDigitalEvenlope*);
SOAP_FMAC3 policynet__PKCSDigitalEvenlope * SOAP_FMAC4 soap_instantiate_policynet__PKCSDigitalEvenlope(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_policynet__PKCSDigitalEvenlope(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_policynetca_policynet__PKCSCertificates
#define SOAP_TYPE_policynetca_policynet__PKCSCertificates (31)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_policynet__PKCSCertificates(struct soap*, const char*, int, const policynet__PKCSCertificates *, const char*);
SOAP_FMAC3 policynet__PKCSCertificates * SOAP_FMAC4 soap_get_policynet__PKCSCertificates(struct soap*, policynet__PKCSCertificates *, const char*, const char*);
SOAP_FMAC3 policynet__PKCSCertificates * SOAP_FMAC4 soap_in_policynet__PKCSCertificates(struct soap*, const char*, policynet__PKCSCertificates *, const char*);
SOAP_FMAC5 policynet__PKCSCertificates * SOAP_FMAC6 soap_new_policynet__PKCSCertificates(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_policynet__PKCSCertificates(struct soap*, policynet__PKCSCertificates*);
SOAP_FMAC3 policynet__PKCSCertificates * SOAP_FMAC4 soap_instantiate_policynet__PKCSCertificates(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_policynet__PKCSCertificates(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_policynetca_policynet__SGDevice
#define SOAP_TYPE_policynetca_policynet__SGDevice (26)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_policynet__SGDevice(struct soap*, const char*, int, const policynet__SGDevice *, const char*);
SOAP_FMAC3 policynet__SGDevice * SOAP_FMAC4 soap_get_policynet__SGDevice(struct soap*, policynet__SGDevice *, const char*, const char*);
SOAP_FMAC3 policynet__SGDevice * SOAP_FMAC4 soap_in_policynet__SGDevice(struct soap*, const char*, policynet__SGDevice *, const char*);
SOAP_FMAC5 policynet__SGDevice * SOAP_FMAC6 soap_new_policynet__SGDevice(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_policynet__SGDevice(struct soap*, policynet__SGDevice*);
SOAP_FMAC3 policynet__SGDevice * SOAP_FMAC4 soap_instantiate_policynet__SGDevice(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_policynet__SGDevice(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_policynetca_policynet__CertId
#define SOAP_TYPE_policynetca_policynet__CertId (25)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_policynet__CertId(struct soap*, const char*, int, const policynet__CertId *, const char*);
SOAP_FMAC3 policynet__CertId * SOAP_FMAC4 soap_get_policynet__CertId(struct soap*, policynet__CertId *, const char*, const char*);
SOAP_FMAC3 policynet__CertId * SOAP_FMAC4 soap_in_policynet__CertId(struct soap*, const char*, policynet__CertId *, const char*);
SOAP_FMAC5 policynet__CertId * SOAP_FMAC6 soap_new_policynet__CertId(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_policynet__CertId(struct soap*, policynet__CertId*);
SOAP_FMAC3 policynet__CertId * SOAP_FMAC4 soap_instantiate_policynet__CertId(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_policynet__CertId(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_policynetca_policynet__PKIStatusInfo
#define SOAP_TYPE_policynetca_policynet__PKIStatusInfo (23)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_policynet__PKIStatusInfo(struct soap*, const char*, int, const policynet__PKIStatusInfo *, const char*);
SOAP_FMAC3 policynet__PKIStatusInfo * SOAP_FMAC4 soap_get_policynet__PKIStatusInfo(struct soap*, policynet__PKIStatusInfo *, const char*, const char*);
SOAP_FMAC3 policynet__PKIStatusInfo * SOAP_FMAC4 soap_in_policynet__PKIStatusInfo(struct soap*, const char*, policynet__PKIStatusInfo *, const char*);
SOAP_FMAC5 policynet__PKIStatusInfo * SOAP_FMAC6 soap_new_policynet__PKIStatusInfo(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_policynet__PKIStatusInfo(struct soap*, policynet__PKIStatusInfo*);
SOAP_FMAC3 policynet__PKIStatusInfo * SOAP_FMAC4 soap_instantiate_policynet__PKIStatusInfo(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_policynet__PKIStatusInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_policynetca_xsd__base64Binary
#define SOAP_TYPE_policynetca_xsd__base64Binary (20)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__base64Binary(struct soap*, const char*, int, const xsd__base64Binary *, const char*);
SOAP_FMAC3 xsd__base64Binary * SOAP_FMAC4 soap_get_xsd__base64Binary(struct soap*, xsd__base64Binary *, const char*, const char*);
SOAP_FMAC3 xsd__base64Binary * SOAP_FMAC4 soap_in_xsd__base64Binary(struct soap*, const char*, xsd__base64Binary *, const char*);
SOAP_FMAC5 xsd__base64Binary * SOAP_FMAC6 soap_new_xsd__base64Binary(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_xsd__base64Binary(struct soap*, xsd__base64Binary*);
SOAP_FMAC3 xsd__base64Binary * SOAP_FMAC4 soap_instantiate_xsd__base64Binary(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__base64Binary(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_policynetca_xsd__dateTime
#define SOAP_TYPE_policynetca_xsd__dateTime (18)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xsd__dateTime(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__dateTime(struct soap*, std::string const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__dateTime(struct soap*, const std::string *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__dateTime(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__dateTime(struct soap*, std::string *, const char*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__dateTime(struct soap*, const char*, std::string*, const char*);
SOAP_FMAC5 std::string * SOAP_FMAC6 soap_new_xsd__dateTime(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_xsd__dateTime(struct soap*, std::string*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_instantiate_xsd__dateTime(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__dateTime(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_policynetca_policynet__LoginPassword
#define SOAP_TYPE_policynetca_policynet__LoginPassword (17)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_policynet__LoginPassword(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_policynet__LoginPassword(struct soap*, std::string const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_policynet__LoginPassword(struct soap*, const std::string *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_policynet__LoginPassword(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_policynet__LoginPassword(struct soap*, std::string *, const char*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_policynet__LoginPassword(struct soap*, const char*, std::string*, const char*);
SOAP_FMAC5 std::string * SOAP_FMAC6 soap_new_policynet__LoginPassword(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_policynet__LoginPassword(struct soap*, std::string*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_instantiate_policynet__LoginPassword(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_policynet__LoginPassword(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_policynetca_policynet__UserName
#define SOAP_TYPE_policynetca_policynet__UserName (16)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_policynet__UserName(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_policynet__UserName(struct soap*, std::string const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_policynet__UserName(struct soap*, const std::string *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_policynet__UserName(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_policynet__UserName(struct soap*, std::string *, const char*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_policynet__UserName(struct soap*, const char*, std::string*, const char*);
SOAP_FMAC5 std::string * SOAP_FMAC6 soap_new_policynet__UserName(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_policynet__UserName(struct soap*, std::string*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_instantiate_policynet__UserName(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_policynet__UserName(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_policynetca_policynet__PKCS10
#define SOAP_TYPE_policynetca_policynet__PKCS10 (15)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_policynet__PKCS10(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_policynet__PKCS10(struct soap*, std::string const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_policynet__PKCS10(struct soap*, const std::string *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_policynet__PKCS10(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_policynet__PKCS10(struct soap*, std::string *, const char*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_policynet__PKCS10(struct soap*, const char*, std::string*, const char*);
SOAP_FMAC5 std::string * SOAP_FMAC6 soap_new_policynet__PKCS10(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_policynet__PKCS10(struct soap*, std::string*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_instantiate_policynet__PKCS10(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_policynet__PKCS10(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_policynetca_xsd__string
#define SOAP_TYPE_policynetca_xsd__string (14)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xsd__string(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__string(struct soap*, std::string const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__string(struct soap*, const std::string *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__string(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__string(struct soap*, std::string *, const char*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__string(struct soap*, const char*, std::string*, const char*);
SOAP_FMAC5 std::string * SOAP_FMAC6 soap_new_xsd__string(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_xsd__string(struct soap*, std::string*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_instantiate_xsd__string(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__string(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_policynetca_std__string
#define SOAP_TYPE_policynetca_std__string (13)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__string(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__string(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__string(struct soap*, const std::string *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__string(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_std__string(struct soap*, std::string *, const char*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_std__string(struct soap*, const char*, std::string*, const char*);
SOAP_FMAC5 std::string * SOAP_FMAC6 soap_new_std__string(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_std__string(struct soap*, std::string*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_instantiate_std__string(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__string(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_policynetca_SOAP_ENV__Fault
#define SOAP_TYPE_policynetca_SOAP_ENV__Fault (63)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC5 struct SOAP_ENV__Fault * SOAP_FMAC6 soap_new_SOAP_ENV__Fault(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_policynetca_SOAP_ENV__Reason
#define SOAP_TYPE_policynetca_SOAP_ENV__Reason (62)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC5 struct SOAP_ENV__Reason * SOAP_FMAC6 soap_new_SOAP_ENV__Reason(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_policynetca_SOAP_ENV__Detail
#define SOAP_TYPE_policynetca_SOAP_ENV__Detail (61)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC5 struct SOAP_ENV__Detail * SOAP_FMAC6 soap_new_SOAP_ENV__Detail(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_policynetca_SOAP_ENV__Code
#define SOAP_TYPE_policynetca_SOAP_ENV__Code (59)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);
SOAP_FMAC5 struct SOAP_ENV__Code * SOAP_FMAC6 soap_new_SOAP_ENV__Code(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE_policynetca_policynet__CertificateRevocationListRequest
#define SOAP_TYPE_policynetca_policynet__CertificateRevocationListRequest (58)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_policynet__CertificateRevocationListRequest(struct soap*, struct policynet__CertificateRevocationListRequest *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_policynet__CertificateRevocationListRequest(struct soap*, const struct policynet__CertificateRevocationListRequest *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_policynet__CertificateRevocationListRequest(struct soap*, const struct policynet__CertificateRevocationListRequest *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_policynet__CertificateRevocationListRequest(struct soap*, const char*, int, const struct policynet__CertificateRevocationListRequest *, const char*);
SOAP_FMAC3 struct policynet__CertificateRevocationListRequest * SOAP_FMAC4 soap_get_policynet__CertificateRevocationListRequest(struct soap*, struct policynet__CertificateRevocationListRequest *, const char*, const char*);
SOAP_FMAC3 struct policynet__CertificateRevocationListRequest * SOAP_FMAC4 soap_in_policynet__CertificateRevocationListRequest(struct soap*, const char*, struct policynet__CertificateRevocationListRequest *, const char*);
SOAP_FMAC5 struct policynet__CertificateRevocationListRequest * SOAP_FMAC6 soap_new_policynet__CertificateRevocationListRequest(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_policynet__CertificateRevocationListRequest(struct soap*, struct policynet__CertificateRevocationListRequest*);
SOAP_FMAC3 struct policynet__CertificateRevocationListRequest * SOAP_FMAC4 soap_instantiate_policynet__CertificateRevocationListRequest(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_policynet__CertificateRevocationListRequest(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_policynetca_policynet__CertificateRevocationRequest
#define SOAP_TYPE_policynetca_policynet__CertificateRevocationRequest (52)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_policynet__CertificateRevocationRequest(struct soap*, struct policynet__CertificateRevocationRequest *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_policynet__CertificateRevocationRequest(struct soap*, const struct policynet__CertificateRevocationRequest *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_policynet__CertificateRevocationRequest(struct soap*, const struct policynet__CertificateRevocationRequest *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_policynet__CertificateRevocationRequest(struct soap*, const char*, int, const struct policynet__CertificateRevocationRequest *, const char*);
SOAP_FMAC3 struct policynet__CertificateRevocationRequest * SOAP_FMAC4 soap_get_policynet__CertificateRevocationRequest(struct soap*, struct policynet__CertificateRevocationRequest *, const char*, const char*);
SOAP_FMAC3 struct policynet__CertificateRevocationRequest * SOAP_FMAC4 soap_in_policynet__CertificateRevocationRequest(struct soap*, const char*, struct policynet__CertificateRevocationRequest *, const char*);
SOAP_FMAC5 struct policynet__CertificateRevocationRequest * SOAP_FMAC6 soap_new_policynet__CertificateRevocationRequest(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_policynet__CertificateRevocationRequest(struct soap*, struct policynet__CertificateRevocationRequest*);
SOAP_FMAC3 struct policynet__CertificateRevocationRequest * SOAP_FMAC4 soap_instantiate_policynet__CertificateRevocationRequest(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_policynet__CertificateRevocationRequest(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_policynetca_policynet__CertificateConfirmRequest
#define SOAP_TYPE_policynetca_policynet__CertificateConfirmRequest (46)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_policynet__CertificateConfirmRequest(struct soap*, struct policynet__CertificateConfirmRequest *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_policynet__CertificateConfirmRequest(struct soap*, const struct policynet__CertificateConfirmRequest *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_policynet__CertificateConfirmRequest(struct soap*, const struct policynet__CertificateConfirmRequest *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_policynet__CertificateConfirmRequest(struct soap*, const char*, int, const struct policynet__CertificateConfirmRequest *, const char*);
SOAP_FMAC3 struct policynet__CertificateConfirmRequest * SOAP_FMAC4 soap_get_policynet__CertificateConfirmRequest(struct soap*, struct policynet__CertificateConfirmRequest *, const char*, const char*);
SOAP_FMAC3 struct policynet__CertificateConfirmRequest * SOAP_FMAC4 soap_in_policynet__CertificateConfirmRequest(struct soap*, const char*, struct policynet__CertificateConfirmRequest *, const char*);
SOAP_FMAC5 struct policynet__CertificateConfirmRequest * SOAP_FMAC6 soap_new_policynet__CertificateConfirmRequest(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_policynet__CertificateConfirmRequest(struct soap*, struct policynet__CertificateConfirmRequest*);
SOAP_FMAC3 struct policynet__CertificateConfirmRequest * SOAP_FMAC4 soap_instantiate_policynet__CertificateConfirmRequest(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_policynet__CertificateConfirmRequest(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_policynetca_policynet__CertificateSigningRequest
#define SOAP_TYPE_policynetca_policynet__CertificateSigningRequest (41)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_policynet__CertificateSigningRequest(struct soap*, struct policynet__CertificateSigningRequest *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_policynet__CertificateSigningRequest(struct soap*, const struct policynet__CertificateSigningRequest *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_policynet__CertificateSigningRequest(struct soap*, const struct policynet__CertificateSigningRequest *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_policynet__CertificateSigningRequest(struct soap*, const char*, int, const struct policynet__CertificateSigningRequest *, const char*);
SOAP_FMAC3 struct policynet__CertificateSigningRequest * SOAP_FMAC4 soap_get_policynet__CertificateSigningRequest(struct soap*, struct policynet__CertificateSigningRequest *, const char*, const char*);
SOAP_FMAC3 struct policynet__CertificateSigningRequest * SOAP_FMAC4 soap_in_policynet__CertificateSigningRequest(struct soap*, const char*, struct policynet__CertificateSigningRequest *, const char*);
SOAP_FMAC5 struct policynet__CertificateSigningRequest * SOAP_FMAC6 soap_new_policynet__CertificateSigningRequest(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_policynet__CertificateSigningRequest(struct soap*, struct policynet__CertificateSigningRequest*);
SOAP_FMAC3 struct policynet__CertificateSigningRequest * SOAP_FMAC4 soap_instantiate_policynet__CertificateSigningRequest(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_policynet__CertificateSigningRequest(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_policynetca_policynet__EndEntityType
#define SOAP_TYPE_policynetca_policynet__EndEntityType (30)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_policynet__EndEntityType(struct soap*, struct policynet__EndEntityType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_policynet__EndEntityType(struct soap*, const struct policynet__EndEntityType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_policynet__EndEntityType(struct soap*, const struct policynet__EndEntityType *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_policynet__EndEntityType(struct soap*, const char*, int, const struct policynet__EndEntityType *, const char*);
SOAP_FMAC3 struct policynet__EndEntityType * SOAP_FMAC4 soap_get_policynet__EndEntityType(struct soap*, struct policynet__EndEntityType *, const char*, const char*);
SOAP_FMAC3 struct policynet__EndEntityType * SOAP_FMAC4 soap_in_policynet__EndEntityType(struct soap*, const char*, struct policynet__EndEntityType *, const char*);
SOAP_FMAC5 struct policynet__EndEntityType * SOAP_FMAC6 soap_new_policynet__EndEntityType(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_policynet__EndEntityType(struct soap*, struct policynet__EndEntityType*);
SOAP_FMAC3 struct policynet__EndEntityType * SOAP_FMAC4 soap_instantiate_policynet__EndEntityType(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_policynet__EndEntityType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_policynetca_policynet__BinaryData
#define SOAP_TYPE_policynetca_policynet__BinaryData (19)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_policynet__BinaryData(struct soap*, struct policynet__BinaryData *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_policynet__BinaryData(struct soap*, const struct policynet__BinaryData *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_policynet__BinaryData(struct soap*, const struct policynet__BinaryData *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_policynet__BinaryData(struct soap*, const char*, int, const struct policynet__BinaryData *, const char*);
SOAP_FMAC3 struct policynet__BinaryData * SOAP_FMAC4 soap_get_policynet__BinaryData(struct soap*, struct policynet__BinaryData *, const char*, const char*);
SOAP_FMAC3 struct policynet__BinaryData * SOAP_FMAC4 soap_in_policynet__BinaryData(struct soap*, const char*, struct policynet__BinaryData *, const char*);
SOAP_FMAC5 struct policynet__BinaryData * SOAP_FMAC6 soap_new_policynet__BinaryData(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_policynet__BinaryData(struct soap*, struct policynet__BinaryData*);
SOAP_FMAC3 struct policynet__BinaryData * SOAP_FMAC4 soap_instantiate_policynet__BinaryData(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_policynet__BinaryData(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_policynetca_SOAP_ENV__Header
#define SOAP_TYPE_policynetca_SOAP_ENV__Header (11)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);
SOAP_FMAC5 struct SOAP_ENV__Header * SOAP_FMAC6 soap_new_SOAP_ENV__Header(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE_policynetca__xop__Include
#define SOAP_TYPE_policynetca__xop__Include (6)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__xop__Include(struct soap*, struct _xop__Include *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__xop__Include(struct soap*, struct _xop__Include const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__xop__Include(struct soap*, const struct _xop__Include *, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__xop__Include(struct soap*, const char*, int, const struct _xop__Include *, const char*);
SOAP_FMAC3 struct _xop__Include * SOAP_FMAC4 soap_get__xop__Include(struct soap*, struct _xop__Include *, const char*, const char*);
SOAP_FMAC3 struct _xop__Include * SOAP_FMAC4 soap_in__xop__Include(struct soap*, const char*, struct _xop__Include *, const char*);
SOAP_FMAC5 struct _xop__Include * SOAP_FMAC6 soap_new__xop__Include(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete__xop__Include(struct soap*, struct _xop__Include*);
SOAP_FMAC3 struct _xop__Include * SOAP_FMAC4 soap_instantiate__xop__Include(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__xop__Include(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_policynetca_policynet__EETypeUnion
#define SOAP_TYPE_policynetca_policynet__EETypeUnion (29)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_policynet__EETypeUnion(struct soap*, int, const union policynet__EETypeUnion *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_policynet__EETypeUnion(struct soap*, int, const union policynet__EETypeUnion *);
SOAP_FMAC3 union policynet__EETypeUnion * SOAP_FMAC4 soap_in_policynet__EETypeUnion(struct soap*, int*, union policynet__EETypeUnion *);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_policynetca_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_policynetca_PointerToSOAP_ENV__Reason (65)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_policynetca_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_policynetca_PointerToSOAP_ENV__Detail (64)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_policynetca_PointerToSOAP_ENV__Code
#define SOAP_TYPE_policynetca_PointerToSOAP_ENV__Code (60)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);

#endif

#ifndef SOAP_TYPE_policynetca_PointerTopolicynet__PKCSDigitalEvenlope
#define SOAP_TYPE_policynetca_PointerTopolicynet__PKCSDigitalEvenlope (38)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTopolicynet__PKCSDigitalEvenlope(struct soap*, policynet__PKCSDigitalEvenlope *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTopolicynet__PKCSDigitalEvenlope(struct soap*, policynet__PKCSDigitalEvenlope *const*, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTopolicynet__PKCSDigitalEvenlope(struct soap*, const char *, int, policynet__PKCSDigitalEvenlope *const*, const char *);
SOAP_FMAC3 policynet__PKCSDigitalEvenlope ** SOAP_FMAC4 soap_get_PointerTopolicynet__PKCSDigitalEvenlope(struct soap*, policynet__PKCSDigitalEvenlope **, const char*, const char*);
SOAP_FMAC3 policynet__PKCSDigitalEvenlope ** SOAP_FMAC4 soap_in_PointerTopolicynet__PKCSDigitalEvenlope(struct soap*, const char*, policynet__PKCSDigitalEvenlope **, const char*);

#ifndef SOAP_TYPE_policynetca_PointerToxsd__dateTime
#define SOAP_TYPE_policynetca_PointerToxsd__dateTime (37)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxsd__dateTime(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxsd__dateTime(struct soap*, std::string *const*, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxsd__dateTime(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerToxsd__dateTime(struct soap*, std::string **, const char*, const char*);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerToxsd__dateTime(struct soap*, const char*, std::string **, const char*);

#ifndef SOAP_TYPE_policynetca_PointerTopolicynet__SGDevice
#define SOAP_TYPE_policynetca_PointerTopolicynet__SGDevice (28)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTopolicynet__SGDevice(struct soap*, policynet__SGDevice *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTopolicynet__SGDevice(struct soap*, policynet__SGDevice *const*, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTopolicynet__SGDevice(struct soap*, const char *, int, policynet__SGDevice *const*, const char *);
SOAP_FMAC3 policynet__SGDevice ** SOAP_FMAC4 soap_get_PointerTopolicynet__SGDevice(struct soap*, policynet__SGDevice **, const char*, const char*);
SOAP_FMAC3 policynet__SGDevice ** SOAP_FMAC4 soap_in_PointerTopolicynet__SGDevice(struct soap*, const char*, policynet__SGDevice **, const char*);

#ifndef SOAP_TYPE_policynetca_PointerTopolicynet__PKIFailureInfo
#define SOAP_TYPE_policynetca_PointerTopolicynet__PKIFailureInfo (24)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTopolicynet__PKIFailureInfo(struct soap*, enum policynet__PKIFailureInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTopolicynet__PKIFailureInfo(struct soap*, enum policynet__PKIFailureInfo *const*, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTopolicynet__PKIFailureInfo(struct soap*, const char *, int, enum policynet__PKIFailureInfo *const*, const char *);
SOAP_FMAC3 enum policynet__PKIFailureInfo ** SOAP_FMAC4 soap_get_PointerTopolicynet__PKIFailureInfo(struct soap*, enum policynet__PKIFailureInfo **, const char*, const char*);
SOAP_FMAC3 enum policynet__PKIFailureInfo ** SOAP_FMAC4 soap_in_PointerTopolicynet__PKIFailureInfo(struct soap*, const char*, enum policynet__PKIFailureInfo **, const char*);

#ifndef SOAP_TYPE_policynetca_PointerTounsignedByte
#define SOAP_TYPE_policynetca_PointerTounsignedByte (9)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTounsignedByte(struct soap*, unsigned char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTounsignedByte(struct soap*, unsigned char *const*, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTounsignedByte(struct soap*, const char *, int, unsigned char *const*, const char *);
SOAP_FMAC3 unsigned char ** SOAP_FMAC4 soap_get_PointerTounsignedByte(struct soap*, unsigned char **, const char*, const char*);
SOAP_FMAC3 unsigned char ** SOAP_FMAC4 soap_in_PointerTounsignedByte(struct soap*, const char*, unsigned char **, const char*);

#ifndef SOAP_TYPE_policynetca__QName
#define SOAP_TYPE_policynetca__QName (5)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__QName(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);

#ifndef SOAP_TYPE_policynetca_string
#define SOAP_TYPE_policynetca_string (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);

#ifndef SOAP_TYPE_policynetca_Array16OfunsignedByte
#define SOAP_TYPE_policynetca_Array16OfunsignedByte (34)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_Array16OfunsignedByte(struct soap*, unsigned char[16]);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_Array16OfunsignedByte(struct soap*, unsigned char const[16]);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_Array16OfunsignedByte(struct soap*, unsigned char const[16], const char*, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_Array16OfunsignedByte(struct soap*, const char*, int, unsigned char const[16], const char*);
SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_get_Array16OfunsignedByte(struct soap*, unsigned char[16], const char*, const char*);
SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_in_Array16OfunsignedByte(struct soap*, const char*, unsigned char[16], const char*);

#ifndef SOAP_TYPE_policynetca_std__vectorTemplateOfpolicynet__PKCS10
#define SOAP_TYPE_policynetca_std__vectorTemplateOfpolicynet__PKCS10 (32)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfpolicynet__PKCS10(struct soap*, std::vector<std::string >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfpolicynet__PKCS10(struct soap*, const std::vector<std::string >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfpolicynet__PKCS10(struct soap*, const char*, int, const std::vector<std::string >*, const char*);
SOAP_FMAC3 std::vector<std::string >* SOAP_FMAC4 soap_in_std__vectorTemplateOfpolicynet__PKCS10(struct soap*, const char*, std::vector<std::string >*, const char*);
SOAP_FMAC5 std::vector<std::string > * SOAP_FMAC6 soap_new_std__vectorTemplateOfpolicynet__PKCS10(struct soap*, int);
SOAP_FMAC5 void SOAP_FMAC6 soap_delete_std__vectorTemplateOfpolicynet__PKCS10(struct soap*, std::vector<std::string >*);
SOAP_FMAC3 std::vector<std::string > * SOAP_FMAC4 soap_instantiate_std__vectorTemplateOfpolicynet__PKCS10(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfpolicynet__PKCS10(struct soap*, int, int, void*, size_t, const void*, size_t);

} // namespace policynetca


#endif

/* End of policynetcaH.h */
